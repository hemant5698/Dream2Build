@using Nop.Services.Orders;
@using Nop.Core;
@using Nop.Core.Domain.Orders;
@inject IShoppingCartService  _shoppingCartService
@inject IWorkContext _workContext 
@{ 
    var customer = _workContext.CurrentCustomer;
    var wishlistCount = _shoppingCartService.GetShoppingCart(customer, ShoppingCartType.Wishlist, 1)
                    .Sum(item => item.Quantity);
}
<div class="header">
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderBefore })
    <div class="responsive-strip">
        <div class="responsive-logo-wrapper">
            @await Component.InvokeAsync("Logo")
        </div>
    </div>
    <div class="header-upper">
        <div class="header-selectors-wrapper">
            @await Component.InvokeAsync("TaxTypeSelector")
            @await Component.InvokeAsync("CurrencySelector")
            @await Component.InvokeAsync("LanguageSelector")
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderSelectors })
        </div>
        <div class="header-links-wrapper">
            <div class="header-links">
                @await Component.InvokeAsync("HeaderLinks")
            </div>
        </div>
		<div class="hedar-links-item help font-13 d-xs-none">
    <a href="tel:+8124512458">Helpline No: +91 81245 12458</a>
   
</div>
        @await Component.InvokeAsync("AdminHeaderLinks")
		<div class="widget-text">
		All our products across the website are available at wholesale prices.
		</div>
    </div>
    <div class="header-lower" id="fixed-header">
        <div class="header-logo">
            @await Component.InvokeAsync("Logo")
        </div>
        <div class="header-menu">
            <div class="menu-button">
                <div class="menu-open" title="@T("SevenSpikes.Themes.Common.MenuTitle")">
                    <span class="menu-icon-line"></span>
                    <span class="menu-icon-line"></span>
                    <span class="menu-icon-line"></span>
                </div>
                <div class="menu-close" title="@T("SevenSpikes.Themes.Common.CloseMenu")"></div>
            </div>
            <div class="menu-header">
                @await Component.InvokeAsync("HeaderLinks")
                @await Component.InvokeAsync("TaxTypeSelector")
                @await Component.InvokeAsync("CurrencySelector")
                @await Component.InvokeAsync("LanguageSelector")
            </div>
            <div class="menu-body">
                @{
                    var menu = await Component.InvokeAsync("Widget", new { widgetZone = "theme_header_menu" });
                }
                @if (String.IsNullOrEmpty(menu.ToHtmlString()))
                {
                    @await Component.InvokeAsync("TopMenu")
                }
                else
                {
                    @menu
                }
            </div>
        </div>
		  <div class="hedar-links-item help font-13 d-none">
            <a href="tel:+918124512458"><span class="phone"></span><span> +91 81245 12458</span></a>

        </div>
		  <div class="search-box store-search-box">
            @await Component.InvokeAsync("SearchBox")
            <div class="search-box-opener">@T("search")</div>
        </div>
        <div class="hedar-links-item wishlist header-links">
            <a href="@Url.RouteUrl("Wishlist")" class="ico-wishlist">
                <span class="wishlist-qty">@T("SevenSpikes.Themes.Pacific.Wishlist.HeaderQuantity", wishlistCount)</span>
            </a>
        </div>
      
        <div class="header-flyout-cart">
            <div class="mobile-flyout-cart-toggle" title="@T("SevenSpikes.Themes.Common.CloseMenu")">
                <span class="first"></span>
                <span class="second"></span>
            </div>
            @await Component.InvokeAsync("FlyoutShoppingCart")
        </div>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderAfter })
</div>

<script asp-location="Footer">
    $(window).scroll(function () {
        var scroll = $(window).scrollTop();

        if (scroll >= 100) {
            $("#fixed-header").addClass("sticky");
        } else {
            $("#fixed-header").removeClass("sticky");
        }
    });
</script>